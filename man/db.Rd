% Generated by roxygen2 (4.0.2): do not edit by hand
\name{db}
\alias{db}
\title{Simple database interface.}
\usage{
db(x, ..., key, .db.preprocess = getOption("dwtools.db.preprocess"),
  .db.postprocess = getOption("dwtools.db.postprocess"),
  .db.conns = getOption("dwtools.db.conns"),
  .db.dict = getOption("dwtools.db.dict"),
  timing = getOption("dwtools.timing"),
  verbose = getOption("dwtools.verbose"))
}
\arguments{
\item{x}{data.table (to save in db) or character of table names or character of sql commands.}

\item{key}{character vector to be used to set key, cannot be mixed with multiple connections queries, see examples for chaining in DT syntax.}

\item{timing}{logical measure timing of queries, read \link{timing}.}

\item{verbose}{integer, if greater than 0 then print debugging messages.}

\item{\dots}{if \code{x} is data.table then \dots expects character table names and character connection names else \dots expects only character connection names.}
}
\value{
In case of \emph{dbWriteTable/dbReadTable/dbGetQuery} the data.table object (possibly with attributes), in case of \emph{dbSendQuery} the send query results,
}
\description{
Simple database interface.
}
\details{
Function is designed to be slim and chainable in data.table \code{`[`} operator.
\itemize{
\item \code{dbWriteTable} - \code{x} is data.table: \code{db(DT,"my_tab")}
\item \code{dbReadTable} - \code{x} character table name: \code{db("my_tab")}
\item \code{dbGetQuery} - \code{x} character with spaces and starts with \code{"SELECT "}: \code{db("SELECT col1 FROM my_tab1")}
\item \code{dbSendQuery} - \code{x} character with spaces and \strong{not} starts with \code{"SELECT "}: \code{db("UPDATE my_tab1 SET col1 = NULL")}
}
}
\section{Multiple connections}{

Table names, sql commands, connection names can be character vectors. It allows processing into multiple connections and tables at once.
}

\section{DB interface unifications}{

You can provide table name as \code{"my_schema1.my_tab1"} and it will be processed according to target db (e.g. for postgres: \code{c("my_schema1","my_tabl1")}).
SQL statements are not unified.
}

\section{Limitation}{

Table names must not contains spaces (which are accepted by some db vendors).
SQL send statements should contains spaces. E.g. sqlite \code{.tables} command will need to be written as \code{db("SELECT * FROM sqlite_master WHERE type='table'")}.
}

\section{Auto table name}{

If writing to db and table name is missing or NULL then the \link{auto.table.name} will be used. The table name used in \emph{dbWriteTable} will be provided as \code{"tablename"} attribute of the function result so the \emph{auto.table.name} can be catched for later use.
}
\examples{
\dontrun{
NULL
}
}

