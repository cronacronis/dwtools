% Generated by roxygen2 (4.0.2): do not edit by hand
\name{build_hierarchy}
\alias{build_hierarchy}
\alias{dw.explore}
\title{build_hierarchy}
\usage{
build_hierarchy(x, deploy = FALSE, db.conn.name,
  src.db.conn.name = names(getOption("dwtools.conns"))[1], dimnames = TRUE,
  .db.conns = getOption("dwtools.conns"))
}
\arguments{
\item{x}{data.table or SQL select statement or table name in database.}

\item{deploy}{logical, TRUE will overwrite the data in the target tables in connection \emph{db.conn.name}.}

\item{db.conn.name}{character deploy db connection name.}

\item{src.db.conn.name}{character db connection only when \emph{x} argument is not a data.table but character SQL \emph{select} statement, or table name in database connection.}

\item{dimnames}{logical currently only \emph{TRUE} supported, dimension names will be created based on the common words in the fields which forms the dimension.}

\item{.db.conns}{list of connections uniquely named. See \link{db} function.}
}
\value{
List of:
tables (multiple normalized R data.tables)
cardinality matrix represents groupings between all columns (computionally extensive for big datasets) like \code{length(unq(col1))/nrow(unique(data.table(col1,col2)))}.
lists of parents and childs for each field.
}
\description{
Detect hierarchies in the data set and normalize to star schema, optional deploy new model to db.
}
\examples{
suppressPackageStartupMessages(library(dwtools))

X = dw.populate(N=1e5, scenario="star")
x <- joinbyv(X$SALES, join=list(X$CURRENCY, X$GEOGRAPHY))
dw <- build_hierarchy(x)
names(dw$tables)

x <- dw.populate(N=1e6, scenario="denormalize")
names(x)
system.time(dw <- build_hierarchy(x))
# cardinality matrix
dw$cardinality[1:10,1:10]
# normalized tables into star schema
lapply(dw$tables,head,3)
# relation defintion, processing meta data also available
names(dw)

# connect db

# build

# exceptions:

# reorder columns

# alter column name to disable common_words feature
#setnames()

# break hierarchies
#`:=`

# add NA in the data
#`:=`

# shiny app to browse model
#if(interactive()) shiny::runApp("dwtools/inst/shinyDW")
}
\seealso{
\link{joinbyv}
}

